{"version":3,"sources":["components/shared/Centered.tsx","components/customTextScrambler/CustomTextScrambler.tsx","components/hiddenInput/HiddenInput.tsx","components/App.tsx","index.tsx"],"names":["Centered","children","className","CustomTextScrambler","props","phrases","speed","pauseTime","HiddenInput","useState","userInputValue","setUserInputValue","autoFocus","type","onChange","event","target","value","onKeyPress","e","key","alert","handleInputKeyPress","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAGaA,EAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACtB,qBAAKC,UAAU,WAAf,SACGD,K,qBCMQE,EAAsB,SAACC,GAClC,IAIA,EAAuFA,EAAhFC,eAAP,MAJuB,CAAC,YAAa,wBAAyB,yBAA0B,gBAIxF,IAAuFD,EAAtDE,aAAjC,MAHqB,GAGrB,IAAuFF,EAAhCG,iBAAvD,MAFyB,IAEzB,EAEA,OACE,sBAAML,UAAU,sBAAhB,SACE,cAAC,IAAD,CACEG,QAASA,EACTC,MAAOA,EACPC,UAAWA,O,OClBNC,G,MAAc,SAACJ,GAC1B,MAA4CK,qBAA5C,mBAAOC,EAAP,KAAuBC,EAAvB,KAQA,OACE,mCACE,sBAAKT,UAAU,+BAAf,UACE,uBACEU,WAAS,EACTV,UAAU,kBACVW,KAAK,OACLC,SAAU,SAAAC,GAAK,OAAIJ,EAAkBI,EAAMC,OAAOC,QAClDC,WAAY,SAAAC,GAAC,OAdO,SAAAA,GACZ,UAAVA,EAAEC,KAAsC,gBAAnBV,GACvBW,MAAM,YAYeC,CAAoBH,IACrCF,MAAOP,IAET,sBAAMR,UAAU,oBAAhB,eACA,sBAAMA,UAAU,cAAhB,SAA+B,cCRxBqB,MAXf,WACE,OACE,sBAAKrB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UACE,cAAC,EAAD,UCNRsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9015c194.chunk.js","sourcesContent":["import './Centered.css'\nimport React from 'react';\n\nexport const Centered = ({children}) => (\n  <div className='centered'>\n    {children}\n  </div>\n);","import './CustomTextScrambler.css'\nimport React from 'react';\nimport 'react-scramble-text/dist/index.css'\nimport TextScrambler from 'react-scramble-text'\n\ntype CustomTextScramblerPropsType = {\n  phrases?: String[],\n  speed?: number\n  pauseTime?: number\n};\n\nexport const CustomTextScrambler = (props: CustomTextScramblerPropsType) => {\n  const defaultPhrases = ['Hey there', 'Welcome to my page :)', 'More to be added soon!', 'üçª']\n  const defaultSpeed = 50\n  const defaultPauseTime = 1000\n\n  const {phrases = defaultPhrases, speed = defaultSpeed, pauseTime = defaultPauseTime} = props\n\n  return (\n    <span className='text-scrambler-font'>\n      <TextScrambler\n        phrases={phrases}\n        speed={speed}\n        pauseTime={pauseTime}/>\n    </span>\n  );\n};","import './HiddenInput.css'\nimport React, {useState} from 'react';\n\ntype HiddenInputPropsType = {};\n\nexport const HiddenInput = (props: HiddenInputPropsType) => {\n  const [userInputValue, setUserInputValue] = useState<string>()\n\n  const handleInputKeyPress = e => {\n    if (e.key === 'Enter' && userInputValue === 'hello_world') {\n      alert('Hello :)')\n    }\n  }\n\n  return (\n    <>\n      <div className='align-left hidden-input-font'>\n        <input\n          autoFocus\n          className='hide-this-input'\n          type=\"text\"\n          onChange={event => setUserInputValue(event.target.value)}\n          onKeyPress={e => handleInputKeyPress(e)}\n          value={userInputValue}\n        />\n        <span className='blink margin-left'>_</span>\n        <span className='margin-left'>{' <'}</span>\n      </div>\n    </>\n  );\n};","import React from 'react';\nimport './App.css';\n\nimport {Centered} from \"./shared/Centered\";\nimport {CustomTextScrambler} from \"./customTextScrambler/CustomTextScrambler\";\nimport {HiddenInput} from \"./hiddenInput/HiddenInput\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <HiddenInput/>\n      <Centered>\n        <CustomTextScrambler/>\n      </Centered>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}